package com.example.jarkataee.dao;

import com.example.jarkataee.config.DatabaseConfig;
import com.example.jarkataee.domain.City;

import java.sql.*;
import java.util.ArrayList;
import java.util.List;

public class CountryDaoImpl implements CountryDao {


    public void createTableIfNotExists() throws SQLException {
        try (Connection conn = DatabaseConfig.getConnection();
             Statement stmt = conn.createStatement()) {

            // Check if the table exists
            ResultSet rs = conn.getMetaData().getTables(null, null, "CITIES", null);

            if (!rs.next()) { // If the table does not exist
                String createTableSQL = "CREATE TABLE cities (" +
                        "id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, " +
                        "name VARCHAR2(100), " +
                        "population NUMBER, " +
                        "country_name VARCHAR2(100)" +
                        ")";
                stmt.executeUpdate(createTableSQL);
                System.out.println("Table 'cities' created successfully.");
            } else {
                System.out.println("Table 'cities' already exists.");
            }
        }
    }

    public List<City> getCitiesByCountry(String countryName) throws SQLException {
        String query = "SELECT name, population, country_name FROM cities WHERE country_name = ?";
        List<City> cities = new ArrayList<>();

        try (Connection conn = DatabaseConfig.getConnection();
             PreparedStatement stmt = conn.prepareStatement(query)) {
            stmt.setString(1, countryName);
            ResultSet rs = stmt.executeQuery();

            while (rs.next()) {
                City city = new City(rs.getString("name"), rs.getInt("population"), rs.getString("country_name"));
                cities.add(city);
            }
        }
        return cities;
    }


    @Override
    public void saveCities(List<City> cities) {
        String query = "INSERT INTO cities (name, population, country_name) VALUES (?, ?, ?)";

        try (Connection conn = DatabaseConfig.getConnection();
             PreparedStatement stmt = conn.prepareStatement(query)) {

            // Disable auto-commit for batch processing
            conn.setAutoCommit(false);

            for (City city : cities) {
                stmt.setString(1, city.getName());
                stmt.setInt(2, city.getPopulation());
                stmt.setString(3, city.getCountryName());
                stmt.addBatch(); // Add this insert to the batch
            }

            // Execute batch insert
            stmt.executeBatch();

            // Commit transaction
            conn.commit();
        } catch (SQLException e) {
            // Handle error
            System.err.println("Error inserting cities: " + e.getMessage());
//            throw e;
        }
    }




    @Override
    public String getLargestCityFromDbOrApi(String country) {
        // Check database first, if not found, call external API and store in DB
        return null;
    }
}
